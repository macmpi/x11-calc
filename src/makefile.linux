#
#  makefile - RPN (Reverse Polish) calculator simulator.
#
#  Copyright(C) 2019 - MT
#
#  makefile.
#
#  This  program is free software: you can redistribute it and/or modify it
#  under  the terms of the GNU General Public License as published  by  the
#  Free  Software Foundation, either version 3 of the License, or (at  your
#  option) any later version.
#
#  This  program  is distributed in the hope that it will  be  useful,  but
#  WITHOUT   ANY   WARRANTY;   without even   the   implied   warranty   of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
#  Public License for more details.
#
#  You  should have received a copy of the GNU General Public License along
#  with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#  Note seperator (tab) at the beginning of the line CANNOT be a space..!
#
#  https://stackoverflow.com/questions/50941196/
#
#  https://www.gnu.org/software/make/manual/html_node/Prerequisite-Types.html
#
#   1 May 13         - Initial version - MT
#   2 Jul 13         - Separated  code  and headers for button  and  colour
#                      manipulation into separate files - MT
#   9 Mar 14         - Separated  code for different calculator models into
#                      a  separate files (instead of using a single  source
#                      file with conditional compilation - MT
#  27 Sep 20         - Added make clean option - MT
#   8 Aug 21         - Removed x11-calc-format - MT
#  11 Aug 21         - Backup created in parent folder - MT
#  12 Sep 21         - Added '-no-pie' option so that the resulting program
#                      can be executed by double clicking on it - MT
#  23 Sep 21         - Model number can now be selected just by setting the
#                      MODEL number in this file - MT
#  26 Sep 21         - Added images to list of files (to backup) - MT
#  30 Sep 21         - Builds label and switch 'classes' - MT
#   3 Oct 21         - Fixed issue with backup file name - MT
#   9 Oct 21         - Moved source code and executable files into separate
#                      folders - MT
#  21 Jan 22         - Moved text messages to a separate file  - MT
#  22 jan 22         - Added a symbol for the current language - MT
#  24 Feb 22         - Clean now deletes ALL object files - MT
#  31 Mar 22         - Added additional libs and flags that are needed when
#                      building the project on NetBSD - MT
#  15 Jan 23         - Delete execuitable before re-compiling - MT
#  18 Jan 23         - Allow VERBOSE and DEBUG options to be specified from
#                      the command line - MT
#                    - Conditionally sets operating specific options (don't
#                      need to comment them out when not required) - MT
#  26 Mar 23         - Set compiler specific flags for gcc - MT
#   1 May 23         - Fixed ordering of compiler options - MT
#  22 Sep 23         - Added build options for MacOS - MT
#   5 Oct 23         - Creates target folder if required - MT
#                    - Lists the execuitable files instead of just the file
#                      names - MT
#   7 Feb 24         - Added new functions to check if a file or  directory
#                      exists - MT
#  18 Feb 24         - Attempts to redefine the COMMIT_ID based on the last
#                      commit using git - MT
#  25 Feb 24         - Removed unused defination - MT
#  10 Mar 24         - Don't redefine target if already defined - MT
#  14 Mar 24         - Allow SCALE_HEIGHT and SCALE_WIDTH to be passed from
#                      command line at compile time - MT
#  17 Mar 24         - Removed OS specific settings for other OSs - MT
#  20 Mar 24         - Fixed issue with directory creation - MT
#                    - Renamed $TARGET to $BIN - MT
#  21 Mar 24         - Instantiate  common  sources  generated object files
#                      per model, so that parallel model linking use proper
#                      object files - macmpi
#  23 Mar 24         - Do not automatically delete object files as this can
#                      break parallel make operations - MT
#                    - Clean removes symbolic links - MT
#  23 Mar 25         - Instantiate without symlinks trick and use std FLAGS
#                      to maximize use of implicit build rules - macmpi
#                    - Remove VERBOSE in favor of make --dry-run - macmpi
#  23 Mar 25         - Rely on makefile.common
#

CFLAGS	?= -O2
LDFLAGS	?=
LDLIBS	?=

LANG	= LANG_$(shell (echo $$LANG | cut -f 1 -d '_'))
COMMIT	!= git log -1 HEAD --format=%h 2> /dev/null

ifneq ($(COMMIT),)
CFLAGS	+= -DCOMMIT_ID='"[Commit Id : $(COMMIT)]"'
endif
ifneq ($(SCALE_WIDTH),)
CFLAGS	+= -DSCALE_WIDTH=$(SCALE_WIDTH)
endif
ifneq ($(SCALE_HEIGHT),)
CFLAGS	+= -DSCALE_HEIGHT=$(SCALE_HEIGHT)
endif

include makefile.all
